{"version":3,"sources":["./src/app/cal-data.types.ts","./src/app/cal-data.service.ts","./src/environments/environment.ts","./src/app/main-layout/main-layout.component.ts","./src/app/main-layout/main-layout.component.html","./src/app/cal-chart/cal-chart.component.ts","./src/app/cal-chart/cal-chart.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/cal-card/cal-card.component.ts","./src/app/cal-card/cal-card.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export enum FoodType {\r\n    Fruit = \"F\",\r\n    Meat = \"M\",\r\n    Vegetable = \"V\",\r\n    Drink = \"D\",\r\n    Snack = \"S\",\r\n    Other = \"O\",\r\n}\r\n\r\nexport const FoodTypeName = {\r\n    'F': 'Fruit',\r\n    'M': 'Meat',\r\n    'V': 'Vegetable',\r\n    'D': 'Drink',\r\n    'S': 'Snack',\r\n    'O': 'Other'\r\n}\r\n\r\nexport const FoodTypeColor = {\r\n    'F': 'ct-fruit-color',\r\n    'M': 'ct-meat-color',\r\n    'V': 'ct-vegetable-color',\r\n    'D': 'ct-drink-color',\r\n    'S': 'ct-snack-color',\r\n    'O': 'ct-other-color'\r\n}\r\n\r\nexport const ChartColorTheme = [\r\n    '#FF4081',\r\n    '#FF5252',\r\n    '#e91e63',\r\n    '#ffab40',\r\n    '#f48fb1',\r\n    '#ef9a9a'\r\n];\r\n\r\nexport enum DateType {\r\n    Daily = 'Daily',\r\n    Weekly = 'Weekly',\r\n    Monthly = 'Monthly',\r\n}\r\n\r\nexport interface IFood {\r\n    name?: string;\r\n    typeName?: string;\r\n    calories: number;\r\n    foodType: FoodType;\r\n    typeColor?: string;\r\n}\r\n\r\n\r\n\r\nexport interface IFoodDataByDate {\r\n    foodType: FoodType;\r\n    lastThirtyDaysCalories: number[];\r\n}\r\n\r\nexport const sampleDataForamt = '2054/F300:300:300:300:300;M300:300:300:300:300;V300:300:300:300:300;D300:300:300:300:300;S300:300:300:300:300;O300:300:300:300:300';\r\n\r\nexport const initData = 'F0;M0;V0;D0;S0;O0';","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FoodType, IFood, IFoodDataByDate, initData } from './cal-data.types';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalDataService {\n   \n  private readonly localStorageKey = 'cal-tracker';\n\n  private readonly foodType = {\n    \"F\": FoodType.Fruit,\n    \"M\": FoodType.Meat,\n    \"V\": FoodType.Vegetable,\n    \"D\": FoodType.Drink,\n    \"S\": FoodType.Snack,\n    \"O\": FoodType.Other,\n  }\n\n  private currentFoodData = this.foodDataArr.slice();\n  private lastUpdatedDate: number;\n  public foodDataSource = new BehaviorSubject<IFoodDataByDate[]>(this.currentFoodData);\n  public foodData$ = this.foodDataSource.asObservable();\n  \n  constructor() { \n  }\n\n  private updateLocalStorage(foodDataArr: IFoodDataByDate[]) {\n    let currentData = this.changeFoodDataArrToString(foodDataArr);\n    localStorage.setItem(this.localStorageKey, currentData);\n  }\n\n  private changeFoodDataArrToString(foodDataArr: IFoodDataByDate[]) {\n    const foodDataToStr = foodDataArr.reduce((result, foodDataByArr, index) => {\n      let currentCalData = foodDataByArr.lastThirtyDaysCalories.join(':');\n      return `${result}${foodDataByArr.foodType}${currentCalData}${index !== foodDataArr.length-1 ? ';' : ''}`\n    }, '');\n    return `${this.currentDateAsSum}/${foodDataToStr}`;\n  }\n\n  private get foodDataArr(): IFoodDataByDate[] {\n    const foodDataFromLocalStorage = localStorage.getItem(this.localStorageKey);\n\n    const foodInitData = `${this.currentDateAsSum}/${initData}`;\n    const foodDataArr = this.parseDataFromLocalStorage(foodDataFromLocalStorage || foodInitData);\n    return foodDataArr;\n  }\n\n  private get currentDateAsSum(): number {\n    const currentDate = new Date();\n    const dateToSum = currentDate.getFullYear() + currentDate.getMonth() + currentDate.getDate();\n    return dateToSum+1;\n  }\n\n  private parseDataFromLocalStorage(data: string): IFoodDataByDate[] {\n\n    const dateAndFoodData = data.split('/');\n    this.lastUpdatedDate = parseInt(dateAndFoodData[0]);\n    const foodArrByDate = dateAndFoodData[1].split(';').map((item => {\n\n      const currentFoodDate = {\n        foodType: this.foodType[item.charAt(0)],\n        lastThirtyDaysCalories: item.substring(1).split(':').map(foodCal => parseInt(foodCal))\n      };\n\n      if (this.currentDateAsSum !== this.lastUpdatedDate) {\n        currentFoodDate.lastThirtyDaysCalories.push(0);\n      }\n\n      return currentFoodDate;\n    }));\n\n    return foodArrByDate;\n  }\n\n  public updateFoodData(food: IFood) {\n\n    const hasFoodType = this.currentFoodData.some(item => item.foodType === food.foodType)\n\n    const needUpdateForFoodType = hasFoodType ? this.currentFoodData.find(item => item.foodType === food.foodType) : {\n      lastThirtyDaysCalories: [],\n      foodType: food.foodType\n    } as IFoodDataByDate;\n\n    if (!hasFoodType) {\n      this.currentFoodData.push(needUpdateForFoodType);\n    }\n\n    if (this.currentDateAsSum === this.lastUpdatedDate) {\n      needUpdateForFoodType.lastThirtyDaysCalories[needUpdateForFoodType.lastThirtyDaysCalories.length-1] += food.calories;\n    } else {\n      this.lastUpdatedDate = this.currentDateAsSum;\n      needUpdateForFoodType.lastThirtyDaysCalories.push(food.calories);\n    }\n\n    // maintain data of 30days\n    this.currentFoodData.forEach(item => {\n      if (item.lastThirtyDaysCalories.length > 30) {\n        item.lastThirtyDaysCalories.shift();\n      }\n    })\n\n    setTimeout(() => {\n      this.updateLocalStorage(this.currentFoodData);\n      this.foodDataSource.next(this.currentFoodData);\n    }, 750);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DateType } from '../cal-data.types';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n})\nexport class MainLayoutComponent implements OnInit {\n\n  public dateType = DateType;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"food-charts-details-container\">\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Daily\"></app-cal-card>\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Weekly\"></app-cal-card>\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Monthly\"></app-cal-card>\n</div>\n","import { Component, ElementRef, Input, OnInit, SimpleChanges } from '@angular/core';\n\nimport * as d3 from 'd3';\nimport { ChartColorTheme, IFood } from '../cal-data.types';\n\n@Component({\n  selector: 'app-cal-chart',\n  templateUrl: './cal-chart.component.html',\n  styleUrls: ['./cal-chart.component.scss']\n})\nexport class CalChartComponent implements OnInit {\n\n  @Input() data: IFood[];\n  hostElement; // Native element hosting the SVG container\n  svg: d3.Selection<any, unknown, null, undefined>; // Top level SVG element\n  g: d3.Selection<SVGGElement, unknown, null, undefined>; // SVG Group element\n  arc: d3.Arc<any, any>; // D3 Arc generator\n  innerRadius: number; // Inner radius of donut chart\n  radius: number; // Outer radius of donut chart\n  slices: d3.Selection<d3.BaseType, unknown, SVGGElement, unknown>; // Donut chart slice elements\n  labels: any; // SVG data label elements\n  totalLabel: any; // SVG label for total\n  foodTypeLabel: any; \n  rawData: number[]; // Raw chart values array\n  total: number; // Total of chart values\n  colorScale: any; // D3 color provider\n  pieData: any; // Arc segment parameters for current data set\n  pieDataPrevious: any; // Arc segment parameters for previous data set - used for transitions\n\n  pie = d3.pie()\n  .sort(null)\n  .value((d: number) => d);\n\n  constructor(private elRef: ElementRef) {\n    this.hostElement = this.elRef.nativeElement;\n}\n\n  ngOnInit() { }\n\n  ngOnChanges(changes: SimpleChanges) {\n      if (changes.data) {\n          this.updateChart(changes.data.currentValue);\n      }\n  }\n\n  private createChart(data: IFood[]) {\n\n      this.processPieData(data);\n\n      this.removeExistingChartFromParent();\n\n      this.setChartDimensions();\n\n      this.setColorScale();\n\n      this.addGraphicsElement();\n\n      this.setupArcGenerator();\n\n      this.addSlicesToTheDonut();\n\n      this.addLabelsToTheDonut();\n\n      this.addDonutTotalLabel();\n  }\n\n\n  private setChartDimensions() {\n      let viewBoxHeight = 200;\n      let viewBoxWidth = 200;\n      this.svg = d3.select(this.hostElement).append('svg')\n          .attr('width', '100%')\n          .attr('height', '100%')\n          .attr('viewBox', '0 0 ' + viewBoxWidth + ' ' + viewBoxHeight);\n  }\n\n  private addGraphicsElement() {\n      this.g = this.svg.append('g')\n          .attr('transform', 'translate(100,90)');\n  }\n\n  private setColorScale() {\n      this.colorScale = d3.scaleOrdinal().domain(['0','1','2','3','4','5']).range(ChartColorTheme);\n  }\n\n  private processPieData(data: IFood[], initial = true) {\n      const calDataArray = data.map((food) => food.calories);\n      this.rawData = calDataArray;\n      this.total = this.rawData.reduce((sum, next) => sum + next, 0);\n\n      this.pieData = this.pie(calDataArray);\n      if (initial) {\n          this.pieDataPrevious = this.pieData;\n      }\n  }\n\n\n  private setupArcGenerator() {\n      this.innerRadius = 50;\n      this.radius = 80;\n      this.arc = d3.arc()\n          .innerRadius(this.innerRadius)\n          .outerRadius(this.radius);\n  }\n\n  private addSlicesToTheDonut() {\n      const chart = this;\n      this.slices = this.g.selectAll('slice')\n          .data(this.pieData)\n          .enter()\n          .append('path')\n          .each((d: any) => { d.outerRadius = this.radius; })\n          .attr('d', this.arc)\n          .on('mouseover', function(datum: any, index) {\n            chart.totalLabel.text(datum.value);\n            chart.foodTypeLabel.text(chart.data[index].typeName);\n            d3.select(this).transition().delay(0)\n                .attr('d', d3.arc()\n                    .innerRadius((chart.innerRadius))\n                    .outerRadius(chart.radius + 10)\n                );\n          })\n          .on('mouseout', function(datum: any, index) {\n            chart.totalLabel.text(chart.total);\n            chart.foodTypeLabel.text('Total');\n            d3.select(this).transition().duration(500)\n            .attr('d', d3.arc()\n                .innerRadius((chart.innerRadius))\n                .outerRadius(chart.radius)\n            );\n          })\n          .attr('fill', (datum, index) => {\n              return this.colorScale(`${index}`);\n          })\n          .style('opacity', 1);\n  }\n\n  private addDonutTotalLabel() {\n      this.totalLabel = this.svg\n          .append('text')\n          .text(this.total)\n          .attr('id', 'total')\n          .attr('x', 100)\n          .attr('y', 100)\n          .style('font-size', '10px')\n          .style('text-anchor', 'middle');\n\n      this.foodTypeLabel = this.svg\n        .append('text')\n        .text('Total')\n        .attr('id', 'food-type-text')\n        .attr('x', 100)\n        .attr('y', 80)\n        .style('font-size', '10px')\n        .style('text-anchor', 'middle');\n  }\n\n  // Creates an 'interpolator' for animated transition for arc slices\n  //   given previous and new arc shapes,\n  //   generates a series of arc shapes (be)tween start and end state\n  arcTween = (datum, index) => {\n      const interpolation = d3.interpolate(this.pieDataPrevious[index], datum);\n      this.pieDataPrevious[index] = interpolation(0);\n      return (t) => {\n        datum.outerRadius = this.radius\n        return this.arc(interpolation(t));\n      }\n  }\n\n  // Creates an 'interpolator' for animated transition for arc labels\n  //   given previous and new label positions,\n  //   generates a series of arc states (be)tween start and end state\n  labelTween = (datum, index) => {\n      const interpolation = d3.interpolate(this.pieDataPrevious[index], datum);\n      this.pieDataPrevious[index] = interpolation(0);\n      return (t) => {\n            datum.outerRadius = this.radius\n          return 'translate(' + this.arc.centroid(interpolation(t)) + ')';\n      }\n  }\n\n  public updateChart(data: IFood[]) {\n      if (!this.svg) {\n          this.createChart(data);\n          return;\n      }\n\n      this.processPieData(data, false);\n\n      this.updateSlices();\n\n      this.updateLabels();\n\n  }\n\n  private updateSlices() {\n      this.slices = this.slices.data(this.pieData);\n      this.slices.transition().duration(750).attrTween('d', this.arcTween);\n  }\n\n  private updateLabels() {\n      this.totalLabel.text(this.total);\n      this.labels.data(this.pieData);\n      this.labels.each((datum, index, n) => {\n          d3.select(n[index]).text(this.labelValueFn(this.rawData[index]));\n      });\n      this.labels.transition().duration(750).attrTween('transform', this.labelTween);\n  }\n\n  private removeExistingChartFromParent() {\n      d3.select(this.hostElement).select('svg').remove();\n  }\n\n  private addLabelsToTheDonut() {\n      this.labels = this.g\n          .selectAll('label')\n          .data(this.pieData)\n          .enter()\n          .append('text')\n          .text(this.labelValueGetter)\n          .attr('transform', (datum, index) => {\n              return 'translate(' + this.arc.centroid(datum) + ')';\n          })\n          .style('font-size', '8px')\n          .style('text-anchor', 'middle');\n\n  }\n\n  private labelValueGetter = (datum, index) => {\n      return this.labelValueFn(this.rawData[index]);\n  }\n\n  private labelValueFn(val) {\n      const pct = Math.floor(val * 100 / this.total);\n      return (pct < 4) ? '' : '' + val;\n  }\n}\n","<svg></svg>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calorieTracker';\n\n  constructor() {\n  }\n\n}\n","<app-header></app-header>\r\n<app-main-layout></app-main-layout>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport  {MatListModule } from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CalCardComponent } from './cal-card/cal-card.component';\nimport { CalChartComponent } from './cal-chart/cal-chart.component';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n    HeaderComponent,\n    CalCardComponent,\n    CalChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatListModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FoodType, FoodTypeColor, FoodTypeName } from '../cal-data.types';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  public foodTypeWithColor = [\n    {\n      name: FoodTypeName[FoodType.Fruit],\n      color: FoodTypeColor[FoodType.Fruit]\n    },\n    {\n      name: FoodTypeName[FoodType.Meat],\n      color: FoodTypeColor[FoodType.Meat],\n    },\n    {\n      name: FoodTypeName[FoodType.Vegetable],\n      color: FoodTypeColor[FoodType.Vegetable],\n    },\n    {\n      name: FoodTypeName[FoodType.Drink],\n      color: FoodTypeColor[FoodType.Drink],\n    },\n    {\n      name: FoodTypeName[FoodType.Snack],\n      color: FoodTypeColor[FoodType.Snack],\n    },\n    {\n      name: FoodTypeName[FoodType.Other],\n      color: FoodTypeColor[FoodType.Other],\n    },\n  ];\n\n  public currentDate: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    const today = new Date();\n    this.currentDate = `${today.getFullYear()}/${today.getMonth()+1}/${today.getDate()}`;\n  }\n\n}\n","<div class=\"app-title\">\n    <h1 class=\"mat-h1\">Calories Tracker</h1>\n</div>\n<div>\n    Date: {{ currentDate }}\n</div>\n<div class=\"food-type-desc\">\nFood Types: \n  <span \n    class=\"food-type\" \n    *ngFor=\"let food of foodTypeWithColor\"\n    [ngClass]=\"food.color\"\n    >\n        {{ food.name }}\n    </span>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CalDataService } from '../cal-data.service';\nimport { DateType, FoodType, FoodTypeColor, FoodTypeName, IFood, IFoodDataByDate } from '../cal-data.types';\nimport { map } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-cal-card',\n  templateUrl: './cal-card.component.html',\n  styleUrls: ['./cal-card.component.scss']\n})\nexport class CalCardComponent implements OnInit {\n\n  @Input() public dateType: DateType;\n\n  public cardTitle: string;\n  public cardSubTitle: string;\n\n  public foodDataArr$: Observable<IFood[]>;\n\n  public foodTypeName = Object.values(FoodTypeName);\n\n  public caloriesForm: FormGroup;\n  public isLoading = false;\n\n  public caloriesData = [];\n\n  constructor(\n    private calDataService: CalDataService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.caloriesForm = this.formBuilder.group({\n      typeName: [null, [Validators.required]],\n      calories: [null, Validators.required]\n    });\n    switch(this.dateType) {\n      case DateType.Daily:\n        this.cardTitle = DateType.Daily;\n        this.cardSubTitle = `${DateType.Daily} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const dailyFoodDataArr = foodDataArr.map((foodData) => {\n              const calories =foodData.lastThirtyDaysCalories[foodData.lastThirtyDaysCalories.length-1] ?? 0;\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories: foodData.lastThirtyDaysCalories[foodData.lastThirtyDaysCalories.length-1] ?? 0\n              } as IFood;\n            });\n            this.isLoading = false;\n            return dailyFoodDataArr;\n          })\n        );\n        break;\n      case DateType.Weekly:\n        this.cardTitle = DateType.Weekly;\n        this.cardSubTitle = `${DateType.Weekly} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const weeklyFoodDataArr = foodDataArr.map((foodData) => {\n              const lastSevenDaysCalories= foodData.lastThirtyDaysCalories.slice(-7);\n              const daysCount = lastSevenDaysCalories.length || 1;\n              const caloriesSum = lastSevenDaysCalories.reduce(((prev, curr) => prev + curr), 0);\n              const calories = Math.round(caloriesSum / daysCount);\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories\n              } as IFood;\n            });\n            this.isLoading = false;\n            return weeklyFoodDataArr;\n          })\n        );\n        break;\n      case DateType.Monthly:\n        this.cardTitle = DateType.Monthly;\n        this.cardSubTitle = `${DateType.Monthly} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const monthlyFoodDataArr = foodDataArr.map((foodData) => {\n              const caloriesSum = foodData.lastThirtyDaysCalories.reduce(((prev, curr) => prev + curr), 0);\n              const daysCount = foodData.lastThirtyDaysCalories.length || 1;\n              const calories = Math.round(caloriesSum / daysCount);\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories\n              } as IFood;\n            });\n            this.isLoading = false;\n            return monthlyFoodDataArr;\n          })\n        );\n        break;\n    }\n  }\n\n  submit() {\n    if (!this.caloriesForm.valid) {\n      return;\n    }\n    const food: IFood = this.caloriesForm.value;\n    this.isLoading = true;\n    this.calDataService.updateFoodData({\n      calories: food.calories,\n      foodType: FoodType[food.typeName]\n    });\n  }\n}\n","<mat-card class=\"food-data-card\" *ngIf=\"foodDataArr$ | async as foodDataArr\">\n    <mat-card-header class=\"food-data-header\">\n      <mat-card-title>{{cardTitle}}</mat-card-title>\n      <mat-card-subtitle>{{cardSubTitle}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"food-data-chart\">\n        <app-cal-chart #appCalChart [data]=\"foodDataArr\"></app-cal-chart>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <mat-list role=\"list\" >\n        <mat-list-item role=\"listitem\" *ngFor=\"let food of foodDataArr\">\n          <span [ngClass]='food.typeColor'>{{ food.typeName + ': ' + food.calories }}</span>\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"cal-input-container\" *ngIf=\"dateType==='Daily'\">\n        <form [formGroup]=\"caloriesForm\" (submit)=\"submit()\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select Type</mat-label>\n            <mat-select formControlName=\"typeName\">\n              <mat-option *ngFor=\"let typeName of foodTypeName\" value=\"{{typeName}}\">{{ typeName }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Enter calories</mat-label>\n            <input matInput formControlName=\"calories\" type=\"number\">\n          </mat-form-field>\n          <button *ngIf=\"!isLoading; else loading\" mat-raised-button color=\"primary\" type=\"submit\">\n            <span>Save</span>\n          </button>\n  \n        </form>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n\n  <ng-template #loading>\n    <mat-progress-spinner \n    class=\"spinner\" \n    mode=\"indeterminate\" \n    diameter=\"30\">\n    </mat-progress-spinner>\n  </ng-template>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}