{"version":3,"sources":["webpack:///src/app/cal-data.types.ts","webpack:///src/app/cal-data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/main-layout/main-layout.component.ts","webpack:///src/app/main-layout/main-layout.component.html","webpack:///src/app/cal-chart/cal-chart.component.ts","webpack:///src/app/cal-chart/cal-chart.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/cal-card/cal-card.component.ts","webpack:///src/app/cal-card/cal-card.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["FoodType","FoodTypeName","FoodTypeColor","ChartColorTheme","DateType","sampleDataForamt","initData","CalDataService","localStorageKey","foodType","Fruit","Meat","Vegetable","Drink","Snack","Other","currentFoodData","foodDataArr","slice","foodDataSource","foodData$","asObservable","currentData","changeFoodDataArrToString","localStorage","setItem","foodDataToStr","reduce","result","foodDataByArr","index","currentCalData","lastThirtyDaysCalories","join","length","currentDateAsSum","data","dateAndFoodData","split","lastUpdatedDate","parseInt","foodArrByDate","map","item","currentFoodDate","charAt","substring","foodCal","push","food","hasFoodType","some","needUpdateForFoodType","find","calories","forEach","shift","setTimeout","updateLocalStorage","next","foodDataFromLocalStorage","getItem","foodInitData","parseDataFromLocalStorage","currentDate","Date","dateToSum","getFullYear","getMonth","getDate","providedIn","environment","production","MainLayoutComponent","dateType","selector","templateUrl","styleUrls","CalChartComponent","elRef","pie","sort","value","d","arcTween","datum","interpolation","pieDataPrevious","t","outerRadius","radius","arc","labelTween","centroid","labelValueGetter","labelValueFn","rawData","hostElement","nativeElement","changes","updateChart","currentValue","processPieData","removeExistingChartFromParent","setChartDimensions","setColorScale","addGraphicsElement","setupArcGenerator","addSlicesToTheDonut","addLabelsToTheDonut","addDonutTotalLabel","viewBoxHeight","viewBoxWidth","svg","append","attr","g","colorScale","domain","range","initial","calDataArray","total","sum","pieData","innerRadius","chart","slices","selectAll","enter","each","on","totalLabel","text","foodTypeLabel","typeName","transition","delay","duration","style","createChart","updateSlices","updateLabels","attrTween","labels","n","select","remove","val","pct","Math","floor","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","HeaderComponent","foodTypeWithColor","name","color","today","CalCardComponent","calDataService","formBuilder","foodTypeName","Object","values","isLoading","caloriesData","caloriesForm","group","required","Daily","cardTitle","cardSubTitle","foodDataArr$","pipe","dailyFoodDataArr","foodData","typeColor","Weekly","weeklyFoodDataArr","lastSevenDaysCalories","daysCount","caloriesSum","prev","curr","round","Monthly","monthlyFoodDataArr","valid","updateFoodData","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["export enum FoodType {\r\n    Fruit = \"F\",\r\n    Meat = \"M\",\r\n    Vegetable = \"V\",\r\n    Drink = \"D\",\r\n    Snack = \"S\",\r\n    Other = \"O\",\r\n}\r\n\r\nexport const FoodTypeName = {\r\n    'F': 'Fruit',\r\n    'M': 'Meat',\r\n    'V': 'Vegetable',\r\n    'D': 'Drink',\r\n    'S': 'Snack',\r\n    'O': 'Other'\r\n}\r\n\r\nexport const FoodTypeColor = {\r\n    'F': 'ct-fruit-color',\r\n    'M': 'ct-meat-color',\r\n    'V': 'ct-vegetable-color',\r\n    'D': 'ct-drink-color',\r\n    'S': 'ct-snack-color',\r\n    'O': 'ct-other-color'\r\n}\r\n\r\nexport const ChartColorTheme = [\r\n    '#FF4081',\r\n    '#FF5252',\r\n    '#e91e63',\r\n    '#ffab40',\r\n    '#f48fb1',\r\n    '#ef9a9a'\r\n];\r\n\r\nexport enum DateType {\r\n    Daily = 'Daily',\r\n    Weekly = 'Weekly',\r\n    Monthly = 'Monthly',\r\n}\r\n\r\nexport interface IFood {\r\n    name?: string;\r\n    typeName?: string;\r\n    calories: number;\r\n    foodType: FoodType;\r\n    typeColor?: string;\r\n}\r\n\r\n\r\n\r\nexport interface IFoodDataByDate {\r\n    foodType: FoodType;\r\n    lastThirtyDaysCalories: number[];\r\n}\r\n\r\nexport const sampleDataForamt = '2054/F300:300:300:300:300;M300:300:300:300:300;V300:300:300:300:300;D300:300:300:300:300;S300:300:300:300:300;O300:300:300:300:300';\r\n\r\nexport const initData = 'F0;M0;V0;D0;S0;O0';","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FoodType, IFood, IFoodDataByDate, initData } from './cal-data.types';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalDataService {\n   \n  private readonly localStorageKey = 'cal-tracker';\n\n  private readonly foodType = {\n    \"F\": FoodType.Fruit,\n    \"M\": FoodType.Meat,\n    \"V\": FoodType.Vegetable,\n    \"D\": FoodType.Drink,\n    \"S\": FoodType.Snack,\n    \"O\": FoodType.Other,\n  }\n\n  private currentFoodData = this.foodDataArr.slice();\n  private lastUpdatedDate: number;\n  public foodDataSource = new BehaviorSubject<IFoodDataByDate[]>(this.currentFoodData);\n  public foodData$ = this.foodDataSource.asObservable();\n  \n  constructor() { \n  }\n\n  private updateLocalStorage(foodDataArr: IFoodDataByDate[]) {\n    let currentData = this.changeFoodDataArrToString(foodDataArr);\n    localStorage.setItem(this.localStorageKey, currentData);\n  }\n\n  private changeFoodDataArrToString(foodDataArr: IFoodDataByDate[]) {\n    const foodDataToStr = foodDataArr.reduce((result, foodDataByArr, index) => {\n      let currentCalData = foodDataByArr.lastThirtyDaysCalories.join(':');\n      return `${result}${foodDataByArr.foodType}${currentCalData}${index !== foodDataArr.length-1 ? ';' : ''}`\n    }, '');\n    return `${this.currentDateAsSum}/${foodDataToStr}`;\n  }\n\n  private get foodDataArr(): IFoodDataByDate[] {\n    const foodDataFromLocalStorage = localStorage.getItem(this.localStorageKey);\n\n    const foodInitData = `${this.currentDateAsSum}/${initData}`;\n    const foodDataArr = this.parseDataFromLocalStorage(foodDataFromLocalStorage || foodInitData);\n    return foodDataArr;\n  }\n\n  private get currentDateAsSum(): number {\n    const currentDate = new Date();\n    const dateToSum = currentDate.getFullYear() + currentDate.getMonth() + currentDate.getDate();\n    return dateToSum+1;\n  }\n\n  private parseDataFromLocalStorage(data: string): IFoodDataByDate[] {\n\n    const dateAndFoodData = data.split('/');\n    this.lastUpdatedDate = parseInt(dateAndFoodData[0]);\n    const foodArrByDate = dateAndFoodData[1].split(';').map((item => {\n\n      const currentFoodDate = {\n        foodType: this.foodType[item.charAt(0)],\n        lastThirtyDaysCalories: item.substring(1).split(':').map(foodCal => parseInt(foodCal))\n      };\n\n      if (this.currentDateAsSum !== this.lastUpdatedDate) {\n        currentFoodDate.lastThirtyDaysCalories.push(0);\n      }\n\n      return currentFoodDate;\n    }));\n\n    return foodArrByDate;\n  }\n\n  public updateFoodData(food: IFood) {\n\n    const hasFoodType = this.currentFoodData.some(item => item.foodType === food.foodType)\n\n    const needUpdateForFoodType = hasFoodType ? this.currentFoodData.find(item => item.foodType === food.foodType) : {\n      lastThirtyDaysCalories: [],\n      foodType: food.foodType\n    } as IFoodDataByDate;\n\n    if (!hasFoodType) {\n      this.currentFoodData.push(needUpdateForFoodType);\n    }\n\n    if (this.currentDateAsSum === this.lastUpdatedDate) {\n      needUpdateForFoodType.lastThirtyDaysCalories[needUpdateForFoodType.lastThirtyDaysCalories.length-1] += food.calories;\n    } else {\n      this.lastUpdatedDate = this.currentDateAsSum;\n      needUpdateForFoodType.lastThirtyDaysCalories.push(food.calories);\n    }\n\n    // maintain data of 30days\n    this.currentFoodData.forEach(item => {\n      if (item.lastThirtyDaysCalories.length > 30) {\n        item.lastThirtyDaysCalories.shift();\n      }\n    })\n\n    setTimeout(() => {\n      this.updateLocalStorage(this.currentFoodData);\n      this.foodDataSource.next(this.currentFoodData);\n    }, 750);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DateType } from '../cal-data.types';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n})\nexport class MainLayoutComponent implements OnInit {\n\n  public dateType = DateType;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"food-charts-details-container\">\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Daily\"></app-cal-card>\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Weekly\"></app-cal-card>\n    <app-cal-card class=\"food-cal-card\" [dateType]=\"dateType.Monthly\"></app-cal-card>\n</div>\n","import { Component, ElementRef, Input, OnInit, SimpleChanges } from '@angular/core';\n\nimport * as d3 from 'd3';\nimport { ChartColorTheme, IFood } from '../cal-data.types';\n\n@Component({\n  selector: 'app-cal-chart',\n  templateUrl: './cal-chart.component.html',\n  styleUrls: ['./cal-chart.component.scss']\n})\nexport class CalChartComponent implements OnInit {\n\n  @Input() data: IFood[];\n  hostElement; // Native element hosting the SVG container\n  svg: d3.Selection<any, unknown, null, undefined>; // Top level SVG element\n  g: d3.Selection<SVGGElement, unknown, null, undefined>; // SVG Group element\n  arc: d3.Arc<any, any>; // D3 Arc generator\n  innerRadius: number; // Inner radius of donut chart\n  radius: number; // Outer radius of donut chart\n  slices: d3.Selection<d3.BaseType, unknown, SVGGElement, unknown>; // Donut chart slice elements\n  labels: any; // SVG data label elements\n  totalLabel: any; // SVG label for total\n  foodTypeLabel: any; \n  rawData: number[]; // Raw chart values array\n  total: number; // Total of chart values\n  colorScale: any; // D3 color provider\n  pieData: any; // Arc segment parameters for current data set\n  pieDataPrevious: any; // Arc segment parameters for previous data set - used for transitions\n\n  pie = d3.pie()\n  .sort(null)\n  .value((d: number) => d);\n\n  constructor(private elRef: ElementRef) {\n    this.hostElement = this.elRef.nativeElement;\n}\n\n  ngOnInit() { }\n\n  ngOnChanges(changes: SimpleChanges) {\n      if (changes.data) {\n          this.updateChart(changes.data.currentValue);\n      }\n  }\n\n  private createChart(data: IFood[]) {\n\n      this.processPieData(data);\n\n      this.removeExistingChartFromParent();\n\n      this.setChartDimensions();\n\n      this.setColorScale();\n\n      this.addGraphicsElement();\n\n      this.setupArcGenerator();\n\n      this.addSlicesToTheDonut();\n\n      this.addLabelsToTheDonut();\n\n      this.addDonutTotalLabel();\n  }\n\n\n  private setChartDimensions() {\n      let viewBoxHeight = 200;\n      let viewBoxWidth = 200;\n      this.svg = d3.select(this.hostElement).append('svg')\n          .attr('width', '100%')\n          .attr('height', '100%')\n          .attr('viewBox', '0 0 ' + viewBoxWidth + ' ' + viewBoxHeight);\n  }\n\n  private addGraphicsElement() {\n      this.g = this.svg.append('g')\n          .attr('transform', 'translate(100,90)');\n  }\n\n  private setColorScale() {\n      this.colorScale = d3.scaleOrdinal().domain(['0','1','2','3','4','5']).range(ChartColorTheme);\n  }\n\n  private processPieData(data: IFood[], initial = true) {\n      const calDataArray = data.map((food) => food.calories);\n      this.rawData = calDataArray;\n      this.total = this.rawData.reduce((sum, next) => sum + next, 0);\n\n      this.pieData = this.pie(calDataArray);\n      if (initial) {\n          this.pieDataPrevious = this.pieData;\n      }\n  }\n\n\n  private setupArcGenerator() {\n      this.innerRadius = 50;\n      this.radius = 80;\n      this.arc = d3.arc()\n          .innerRadius(this.innerRadius)\n          .outerRadius(this.radius);\n  }\n\n  private addSlicesToTheDonut() {\n      const chart = this;\n      this.slices = this.g.selectAll('slice')\n          .data(this.pieData)\n          .enter()\n          .append('path')\n          .each((d: any) => { d.outerRadius = this.radius; })\n          .attr('d', this.arc)\n          .on('mouseover', function(datum: any, index) {\n            chart.totalLabel.text(datum.value);\n            chart.foodTypeLabel.text(chart.data[index].typeName);\n            d3.select(this).transition().delay(0)\n                .attr('d', d3.arc()\n                    .innerRadius((chart.innerRadius))\n                    .outerRadius(chart.radius + 10)\n                );\n          })\n          .on('mouseout', function(datum: any, index) {\n            chart.totalLabel.text(chart.total);\n            chart.foodTypeLabel.text('Total');\n            d3.select(this).transition().duration(500)\n            .attr('d', d3.arc()\n                .innerRadius((chart.innerRadius))\n                .outerRadius(chart.radius)\n            );\n          })\n          .attr('fill', (datum, index) => {\n              return this.colorScale(`${index}`);\n          })\n          .style('opacity', 1);\n  }\n\n  private addDonutTotalLabel() {\n      this.totalLabel = this.svg\n          .append('text')\n          .text(this.total)\n          .attr('id', 'total')\n          .attr('x', 100)\n          .attr('y', 100)\n          .style('font-size', '10px')\n          .style('text-anchor', 'middle');\n\n      this.foodTypeLabel = this.svg\n        .append('text')\n        .text('Total')\n        .attr('id', 'food-type-text')\n        .attr('x', 100)\n        .attr('y', 80)\n        .style('font-size', '10px')\n        .style('text-anchor', 'middle');\n  }\n\n  // Creates an 'interpolator' for animated transition for arc slices\n  //   given previous and new arc shapes,\n  //   generates a series of arc shapes (be)tween start and end state\n  arcTween = (datum, index) => {\n      const interpolation = d3.interpolate(this.pieDataPrevious[index], datum);\n      this.pieDataPrevious[index] = interpolation(0);\n      return (t) => {\n        datum.outerRadius = this.radius\n        return this.arc(interpolation(t));\n      }\n  }\n\n  // Creates an 'interpolator' for animated transition for arc labels\n  //   given previous and new label positions,\n  //   generates a series of arc states (be)tween start and end state\n  labelTween = (datum, index) => {\n      const interpolation = d3.interpolate(this.pieDataPrevious[index], datum);\n      this.pieDataPrevious[index] = interpolation(0);\n      return (t) => {\n            datum.outerRadius = this.radius\n          return 'translate(' + this.arc.centroid(interpolation(t)) + ')';\n      }\n  }\n\n  public updateChart(data: IFood[]) {\n      if (!this.svg) {\n          this.createChart(data);\n          return;\n      }\n\n      this.processPieData(data, false);\n\n      this.updateSlices();\n\n      this.updateLabels();\n\n  }\n\n  private updateSlices() {\n      this.slices = this.slices.data(this.pieData);\n      this.slices.transition().duration(750).attrTween('d', this.arcTween);\n  }\n\n  private updateLabels() {\n      this.totalLabel.text(this.total);\n      this.labels.data(this.pieData);\n      this.labels.each((datum, index, n) => {\n          d3.select(n[index]).text(this.labelValueFn(this.rawData[index]));\n      });\n      this.labels.transition().duration(750).attrTween('transform', this.labelTween);\n  }\n\n  private removeExistingChartFromParent() {\n      d3.select(this.hostElement).select('svg').remove();\n  }\n\n  private addLabelsToTheDonut() {\n      this.labels = this.g\n          .selectAll('label')\n          .data(this.pieData)\n          .enter()\n          .append('text')\n          .text(this.labelValueGetter)\n          .attr('transform', (datum, index) => {\n              return 'translate(' + this.arc.centroid(datum) + ')';\n          })\n          .style('font-size', '8px')\n          .style('text-anchor', 'middle');\n\n  }\n\n  private labelValueGetter = (datum, index) => {\n      return this.labelValueFn(this.rawData[index]);\n  }\n\n  private labelValueFn(val) {\n      const pct = Math.floor(val * 100 / this.total);\n      return (pct < 4) ? '' : '' + val;\n  }\n}\n","<svg></svg>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calorieTracker';\n\n  constructor() {\n  }\n\n}\n","<app-header></app-header>\r\n<app-main-layout></app-main-layout>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport  {MatListModule } from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CalCardComponent } from './cal-card/cal-card.component';\nimport { CalChartComponent } from './cal-chart/cal-chart.component';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n    HeaderComponent,\n    CalCardComponent,\n    CalChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatListModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FoodType, FoodTypeColor, FoodTypeName } from '../cal-data.types';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  public foodTypeWithColor = [\n    {\n      name: FoodTypeName[FoodType.Fruit],\n      color: FoodTypeColor[FoodType.Fruit]\n    },\n    {\n      name: FoodTypeName[FoodType.Meat],\n      color: FoodTypeColor[FoodType.Meat],\n    },\n    {\n      name: FoodTypeName[FoodType.Vegetable],\n      color: FoodTypeColor[FoodType.Vegetable],\n    },\n    {\n      name: FoodTypeName[FoodType.Drink],\n      color: FoodTypeColor[FoodType.Drink],\n    },\n    {\n      name: FoodTypeName[FoodType.Snack],\n      color: FoodTypeColor[FoodType.Snack],\n    },\n    {\n      name: FoodTypeName[FoodType.Other],\n      color: FoodTypeColor[FoodType.Other],\n    },\n  ];\n\n  public currentDate: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    const today = new Date();\n    this.currentDate = `${today.getFullYear()}/${today.getMonth()+1}/${today.getDate()}`;\n  }\n\n}\n","<div class=\"app-title\">\n    <h1 class=\"mat-h1\">Calories Tracker</h1>\n</div>\n<div>\n    Date: {{ currentDate }}\n</div>\n<div class=\"food-type-desc\">\nFood Types: \n  <span \n    class=\"food-type\" \n    *ngFor=\"let food of foodTypeWithColor\"\n    [ngClass]=\"food.color\"\n    >\n        {{ food.name }}\n    </span>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CalDataService } from '../cal-data.service';\nimport { DateType, FoodType, FoodTypeColor, FoodTypeName, IFood, IFoodDataByDate } from '../cal-data.types';\nimport { map } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-cal-card',\n  templateUrl: './cal-card.component.html',\n  styleUrls: ['./cal-card.component.scss']\n})\nexport class CalCardComponent implements OnInit {\n\n  @Input() public dateType: DateType;\n\n  public cardTitle: string;\n  public cardSubTitle: string;\n\n  public foodDataArr$: Observable<IFood[]>;\n\n  public foodTypeName = Object.values(FoodTypeName);\n\n  public caloriesForm: FormGroup;\n  public isLoading = false;\n\n  public caloriesData = [];\n\n  constructor(\n    private calDataService: CalDataService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.caloriesForm = this.formBuilder.group({\n      typeName: [null, [Validators.required]],\n      calories: [null, Validators.required]\n    });\n    switch(this.dateType) {\n      case DateType.Daily:\n        this.cardTitle = DateType.Daily;\n        this.cardSubTitle = `${DateType.Daily} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const dailyFoodDataArr = foodDataArr.map((foodData) => {\n              const calories =foodData.lastThirtyDaysCalories[foodData.lastThirtyDaysCalories.length-1] ?? 0;\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories: foodData.lastThirtyDaysCalories[foodData.lastThirtyDaysCalories.length-1] ?? 0\n              } as IFood;\n            });\n            this.isLoading = false;\n            return dailyFoodDataArr;\n          })\n        );\n        break;\n      case DateType.Weekly:\n        this.cardTitle = DateType.Weekly;\n        this.cardSubTitle = `${DateType.Weekly} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const weeklyFoodDataArr = foodDataArr.map((foodData) => {\n              const lastSevenDaysCalories= foodData.lastThirtyDaysCalories.slice(-7);\n              const daysCount = lastSevenDaysCalories.length || 1;\n              const caloriesSum = lastSevenDaysCalories.reduce(((prev, curr) => prev + curr), 0);\n              const calories = Math.round(caloriesSum / daysCount);\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories\n              } as IFood;\n            });\n            this.isLoading = false;\n            return weeklyFoodDataArr;\n          })\n        );\n        break;\n      case DateType.Monthly:\n        this.cardTitle = DateType.Monthly;\n        this.cardSubTitle = `${DateType.Monthly} average of calories`;\n        this.foodDataArr$ = this.calDataService.foodData$.pipe(\n          map((foodDataArr: IFoodDataByDate[]) => {\n            const monthlyFoodDataArr = foodDataArr.map((foodData) => {\n              const caloriesSum = foodData.lastThirtyDaysCalories.reduce(((prev, curr) => prev + curr), 0);\n              const daysCount = foodData.lastThirtyDaysCalories.length || 1;\n              const calories = Math.round(caloriesSum / daysCount);\n              this.caloriesData.push(calories);\n              return {\n                foodType: foodData.foodType,\n                typeName: FoodTypeName[foodData.foodType],\n                typeColor: FoodTypeColor[foodData.foodType],\n                calories\n              } as IFood;\n            });\n            this.isLoading = false;\n            return monthlyFoodDataArr;\n          })\n        );\n        break;\n    }\n  }\n\n  submit() {\n    if (!this.caloriesForm.valid) {\n      return;\n    }\n    const food: IFood = this.caloriesForm.value;\n    this.isLoading = true;\n    this.calDataService.updateFoodData({\n      calories: food.calories,\n      foodType: FoodType[food.typeName]\n    });\n  }\n}\n","<mat-card class=\"food-data-card\" *ngIf=\"foodDataArr$ | async as foodDataArr\">\n    <mat-card-header class=\"food-data-header\">\n      <mat-card-title>{{cardTitle}}</mat-card-title>\n      <mat-card-subtitle>{{cardSubTitle}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"food-data-chart\">\n        <app-cal-chart #appCalChart [data]=\"foodDataArr\"></app-cal-chart>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <mat-list role=\"list\" >\n        <mat-list-item role=\"listitem\" *ngFor=\"let food of foodDataArr\">\n          <span [ngClass]='food.typeColor'>{{ food.typeName + ': ' + food.calories }}</span>\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"cal-input-container\" *ngIf=\"dateType==='Daily'\">\n        <form [formGroup]=\"caloriesForm\" (submit)=\"submit()\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select Type</mat-label>\n            <mat-select formControlName=\"typeName\">\n              <mat-option *ngFor=\"let typeName of foodTypeName\" value=\"{{typeName}}\">{{ typeName }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Enter calories</mat-label>\n            <input matInput formControlName=\"calories\" type=\"number\">\n          </mat-form-field>\n          <button *ngIf=\"!isLoading; else loading\" mat-raised-button color=\"primary\" type=\"submit\">\n            <span>Save</span>\n          </button>\n  \n        </form>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n\n  <ng-template #loading>\n    <mat-progress-spinner \n    class=\"spinner\" \n    mode=\"indeterminate\" \n    diameter=\"30\">\n    </mat-progress-spinner>\n  </ng-template>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}